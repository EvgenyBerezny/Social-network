{"version":3,"file":"static/js/878.a9b7b054.chunk.js","mappings":"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","sources":["webpack://app-test/./src/components/Users/Users.module.css?b9d0","webpack://app-test/./src/components/common/Paginator/Paginator.module.css?6caa","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main_cont\":\"Users_main_cont__iw3O0\",\"ava\":\"Users_ava__5C6aZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"selectedPage\":\"Paginator_selectedPage__PAPMQ\",\"pageList\":\"Paginator_pageList__Vrjg0\",\"pageFlip\":\"Paginator_pageFlip__PjI8Y\"};","import style from \"./Paginator.module.css\";\r\nimport React from \"react\";\r\nimport cn from \"classnames\";\r\nimport {Pagination} from \"@mui/material\";\r\n\r\nlet Paginator = ({itemsTotalCount, pageSize, currentPage ,onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(itemsTotalCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    // let portionCount = Math.ceil(pagesCount / portionSize);\r\n    // let [portionNumber, setPortionNumber] = useState(1);\r\n    // let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    // let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={style.paginator}>\r\n            <Pagination className={cn(style.selectedPage, style.pageList)}\r\n                        count={pagesCount} variant=\"outlined\" shape=\"rounded\" siblingCount={2}\r\n                        page={currentPage}\r\n                        onChange={(event, page) => { onPageChanged(page); }}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;\r\n\r\n// { portionNumber > 1 &&\r\n// <button className={style.pageFlip} onClick={() => { setPortionNumber(portionNumber - 1)}}>...</button>}\r\n// {pages\r\n//     .filter((p => p >= leftPortionPageNumber && p <= rightPortionPageNumber))\r\n//     .map((p) => {\r\n//         return <span className={cn({[style.selectedPage]: currentPage === p}, style.pageList)}\r\n//                      key={p}\r\n//                      onClick={(e) => {\r\n//                          onPageChanged(p);\r\n//                      }}>{p}</span>\r\n//     })}\r\n// {portionCount > portionNumber &&\r\n// <button className={style.pageFlip} onClick={() => { setPortionNumber(portionNumber + 1)}}>...</button>}","import style from \"./Users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport defaultUserPhoto from \"../../images/photo.jpg\"\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div className={style.main_cont}>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : defaultUserPhoto}\r\n                             className={style.ava} alt={\"UserPhoto\"}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                            unfollow(user.id)\r\n                        }}>Unfollow</button>\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                            follow(user.id)\r\n                        }}>Follow</button>}\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>\r\n                        {user.name}\r\n                    </div>\r\n                    <div>\r\n                        {user.status}\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <div>\r\n                        {\"user.location.country\"}\r\n                    </div>\r\n                    <div>\r\n                        {\"user.location.city\"}\r\n                    </div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import style from \"./Users.module.css\";\r\nimport React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({totalUsersCount, pageSize, currentPage ,onPageChanged, users, follow, unfollow, followingInProgress}) => {\r\n    return (\r\n        <div className={style.main_cont}>\r\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                       itemsTotalCount={totalUsersCount} pageSize={pageSize}/>\r\n            {users.map(u => <User user={u} key={u.id} unfollow={unfollow}\r\n                                  followingInProgress={followingInProgress}\r\n                                  follow={follow}/>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsers = (state) => {\r\n    return state.usersState.users;\r\n}\r\n\r\nexport const getUsersReselector = createSelector(getUsers, (users) => {\r\n    return users;\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersState.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersState.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersState.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersState.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersState.followingInProgress;\r\n}\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow, setIsFollowing, requestUsers\r\n} from \"../../redux/users-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {authRedirect} from \"../../hoc/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    // getUsers,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getFollowingInProgress, getUsersReselector\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ?\r\n                <Preloader/> :\r\n                <Users totalUsersCount={this.props.totalUsersCount}\r\n                       pageSize={this.props.pageSize}\r\n                       currentPage={this.props.currentPage}\r\n                       onPageChanged={this.onPageChanged}\r\n                       users={this.props.users}\r\n                       follow={this.props.follow}\r\n                       unfollow={this.props.unfollow}\r\n                       followingInProgress={this.props.followingInProgress}\r\n                />}\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersReselector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, {\r\n    follow, unfollow, setCurrentPage,\r\n    setIsFollowing, requestUsers}),\r\n    authRedirect)(UsersContainer);\r\n\r\n\r\n"],"names":["itemsTotalCount","pageSize","currentPage","onPageChanged","pagesCount","portionSize","Math","ceil","pages","i","push","className","style","Pagination","cn","count","variant","shape","siblingCount","page","onChange","event","user","followingInProgress","unfollow","follow","to","id","src","photos","small","defaultUserPhoto","alt","followed","disabled","some","onClick","name","status","totalUsersCount","users","map","u","getUsersReselector","createSelector","state","usersState","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","pageNumber","props","requestUsers","this","Preloader","React","compose","connect","setCurrentPage","setIsFollowing","authRedirect"],"sourceRoot":""}